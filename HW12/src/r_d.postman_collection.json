{
	"info": {
		"_postman_id": "bcd33635-29da-4ec2-90f0-1f27c83dded4",
		"name": "r_d",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7623526"
	},
	"item": [
		{
			"name": "random_joke1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3005/random_joke",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005",
					"path": [
						"random_joke"
					]
				}
			},
			"response": []
		},
		{
			"name": "random_joke2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3005/jokes/random",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005",
					"path": [
						"jokes",
						"random"
					]
				}
			},
			"response": []
		},
		{
			"name": "random_joke_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Successful GET request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3005/jokes/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005",
					"path": [
						"jokes",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{$randomInt}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "joke_types",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful GET request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"general\")\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3005/types",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005",
					"path": [
						"types"
					]
				}
			},
			"response": []
		},
		{
			"name": "joke_types_random",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response object structure is correct\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.be.greaterThan(0);\r",
							"\r",
							"    let joke = jsonData[0]; \r",
							"    pm.expect(joke).to.have.property(\"type\");\r",
							"    pm.expect(joke).to.have.property(\"setup\");\r",
							"    pm.expect(joke).to.have.property(\"punchline\");\r",
							"    pm.expect(joke).to.have.property(\"id\");\r",
							"\r",
							"    pm.expect(joke.type).to.be.a(\"string\");\r",
							"    pm.expect(joke.setup).to.be.a(\"string\");\r",
							"    pm.expect(joke.punchline).to.be.a(\"string\");\r",
							"    pm.expect(joke.id).to.be.a(\"number\");\r",
							"});\r",
							"pm.test(\"Check joke values\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    let joke = jsonData[0];\r",
							"\r",
							"    pm.expect(joke.type).to.equal(\"programming\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3005/jokes/:types/random",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005",
					"path": [
						"jokes",
						":types",
						"random"
					],
					"variable": [
						{
							"key": "types",
							"value": "programming"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "random10",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response array is not empty\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.be.above(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3005/random_ten",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005",
					"path": [
						"random_ten"
					]
				}
			},
			"response": []
		},
		{
			"name": "joke_number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response should be an array\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an('array');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3005/jokes/random/25",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3005",
					"path": [
						"jokes",
						"random",
						"25"
					]
				}
			},
			"response": []
		}
	]
}